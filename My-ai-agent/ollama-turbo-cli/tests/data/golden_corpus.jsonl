{"id":"doc-rl","title":"HTTP Rate Limits","url":"https://docs.example.com/rate-limits","timestamp":"2024-01-01","text":"Clients must handle HTTP 429 Too Many Requests. The Retry-After header indicates the number of seconds to wait before retry. Respect per-user and per-token quotas and avoid hot loops."}
{"id":"doc-oauth","title":"OAuth Scopes and Tokens","url":"https://docs.example.com/oauth","timestamp":"2024-01-02","text":"OAuth access tokens carry scopes that restrict API capabilities. Request only minimal scopes and rotate tokens periodically. Expired tokens should be refreshed via the OAuth flow."}
{"id":"doc-pag","title":"Cursor-based Pagination","url":"https://docs.example.com/pagination","timestamp":"2024-01-03","text":"Use cursor-based pagination for large collections. The response includes a next_page_token; pass it back to fetch the next page. Avoid offset-based pagination for unbounded lists."}
{"id":"doc-cache","title":"HTTP Caching","url":"https://docs.example.com/caching","timestamp":"2024-01-04","text":"Leverage HTTP caching with ETag and Last-Modified validators. Use Cache-Control headers to define freshness and revalidation behavior. Prefer conditional requests to reduce bandwidth."}
{"id":"doc-backoff","title":"Exponential Backoff with Jitter","url":"https://docs.example.com/retries","timestamp":"2024-01-05","text":"Implement retries using exponential backoff with full jitter to smooth thundering herds. Start with small base delays and cap the maximum backoff. Respect server guidance and stop on fatal errors."}
{"id":"doc-idem","title":"Idempotency Keys","url":"https://docs.example.com/idempotency","timestamp":"2024-01-06","text":"For unsafe HTTP methods, include an Idempotency-Key header to deduplicate retries. The server should store the result keyed by the idempotency key and return the same response on replay."}
{"id":"doc-partial","title":"Partial Failures","url":"https://docs.example.com/partials","timestamp":"2024-01-07","text":"Bulk operations may encounter partial failure. Return per-item status and document transactional boundaries. Consider best-effort semantics or retry queues for failed items."}
{"id":"doc-json","title":"JSON Schema Validation","url":"https://docs.example.com/json-schema","timestamp":"2024-01-08","text":"Validate inputs using JSON Schema (draft-07 or newer). Enforce type constraints, required properties, and formats. Reject and log invalid payloads with clear errors."}
{"id":"doc-tls","title":"TLS Handshake","url":"https://docs.example.com/tls","timestamp":"2024-01-09","text":"TLS provides confidentiality and integrity. Verify the certificate chain and hostname. Mutual TLS may be required in enterprise deployments."}
{"id":"doc-webhook","title":"Webhook Signatures","url":"https://docs.example.com/webhooks","timestamp":"2024-01-10","text":"Verify webhook authenticity using an HMAC signature with a shared secret. Check the timestamp tolerance to prevent replay attacks and rotate secrets regularly."}
